// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using STT.Persistence;

namespace STT.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("STT.Domain.Entities.Watchlist", b =>
                {
                    b.Property<Guid>("WatchlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("f17d2c42-adf0-4990-b31e-fdb30fee744a"))
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 12, 5, 11, 20, 11, 963, DateTimeKind.Utc).AddTicks(4239));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("WatchlistId");

                    b.ToTable("Watchlists");
                });

            modelBuilder.Entity("STT.Domain.Entities.WatchlistItem", b =>
                {
                    b.Property<Guid>("WatchlistItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("8eecde13-6d92-4fb4-a2de-678129551a59"))
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 12, 5, 11, 20, 11, 971, DateTimeKind.Utc).AddTicks(6354));

                    b.Property<string>("FilmId")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsWatched")
                        .HasColumnType("bit");

                    b.Property<Guid>("WatchlistId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("WatchlistItemId");

                    b.HasIndex("WatchlistId");

                    b.ToTable("WatchlistItems");
                });

            modelBuilder.Entity("STT.Domain.Entities.WatchlistItem", b =>
                {
                    b.HasOne("STT.Domain.Entities.Watchlist", "Watchlist")
                        .WithMany("WatchlistItems")
                        .HasForeignKey("WatchlistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Watchlist");
                });

            modelBuilder.Entity("STT.Domain.Entities.Watchlist", b =>
                {
                    b.Navigation("WatchlistItems");
                });
#pragma warning restore 612, 618
        }
    }
}
